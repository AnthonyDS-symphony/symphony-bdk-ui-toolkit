// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A MessageBox Component Should render the component snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MessageBox
    boxColor="default"
    icon="my-icon"
    iconColor="default"
    iconImage={null}
    message="my-message"
    messageColor="default"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <i
          className="my-icon message-box__icon message-box__icon--default"
        />,
        <span
          className="message-box__message message-box__message--default"
        >
          my-message
        </span>,
      ],
      "className": "message-box message-box--default",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "my-icon message-box__icon message-box__icon--default",
        },
        "ref": null,
        "rendered": null,
        "type": "i",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "my-message",
          "className": "message-box__message message-box__message--default",
        },
        "ref": null,
        "rendered": "my-message",
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <i
            className="my-icon message-box__icon message-box__icon--default"
          />,
          <span
            className="message-box__message message-box__message--default"
          >
            my-message
          </span>,
        ],
        "className": "message-box message-box--default",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "my-icon message-box__icon message-box__icon--default",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "my-message",
            "className": "message-box__message message-box__message--default",
          },
          "ref": null,
          "rendered": "my-message",
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`A MessageBox Component with image as icon Should render the component snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MessageBox
    boxColor="default"
    icon={null}
    iconColor="default"
    iconImage="my-img"
    message="my-message"
    messageColor="default"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="info"
          className="message-box__img"
          src="my-img"
        />,
        <span
          className="message-box__message message-box__message--default"
        >
          my-message
        </span>,
      ],
      "className": "message-box message-box--default",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "info",
          "className": "message-box__img",
          "src": "my-img",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "my-message",
          "className": "message-box__message message-box__message--default",
        },
        "ref": null,
        "rendered": "my-message",
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="info"
            className="message-box__img"
            src="my-img"
          />,
          <span
            className="message-box__message message-box__message--default"
          >
            my-message
          </span>,
        ],
        "className": "message-box message-box--default",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "info",
            "className": "message-box__img",
            "src": "my-img",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "my-message",
            "className": "message-box__message message-box__message--default",
          },
          "ref": null,
          "rendered": "my-message",
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
